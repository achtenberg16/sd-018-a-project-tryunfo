{"ast":null,"code":"var _jsxFileName = \"/home/alessandroachtenberg/\\xC1rea de Trabalho/Trybe/projetos/sd-018-a-project-tryunfo/src/App.js\";\nimport React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport Cardcreate from './components/Cardcreate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.isFormValidate = () => {\n      const {\n        cardName,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardDescription\n      } = this.state;\n      const array = [cardName, cardAttr1, cardAttr2, cardAttr3, cardImage, cardRare, cardDescription];\n      if (this.validadeAtribute(+cardAttr1, +cardAttr2, +cardAttr3)) return false;\n      return !array.some(index => index === '');\n    };\n\n    this.onInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [target.name]: value\n      });\n    };\n\n    this.onSaveButtonClick = event => {\n      event.preventDefault();\n      const {\n        cardName,\n        cardDescription,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardTrunfo\n      } = this.state;\n      const cardFinishi = {\n        cardName,\n        cardDescription,\n        cardAttr1,\n        cardAttr2,\n        cardAttr3,\n        cardImage,\n        cardRare,\n        cardTrunfo\n      };\n\n      if (cardTrunfo) {\n        this.setState({\n          hasTrunfo: true\n        });\n      }\n\n      this.setState(_ref2 => {\n        let {\n          cards\n        } = _ref2;\n        return {\n          cards: [...cards, cardFinishi]\n        };\n      });\n      this.setState(this.stateInitial);\n    };\n\n    this.onRemoveCard = (cardname, isTrunfo) => {\n      const {\n        cards\n      } = this.state;\n      const cardsFilter = cards.filter(card => card.cardName !== cardname);\n\n      if (isTrunfo) {\n        this.setState({\n          hasTrunfo: false,\n          cards: cardsFilter\n        });\n      } else {\n        this.setState({\n          cards: cardsFilter\n        });\n      }\n    };\n\n    this.createdCardFilter = () => {\n      const {\n        cards,\n        cardsFilterName\n      } = this.state;\n      cards.filter(_ref3 => {\n        let {\n          cardName\n        } = _ref3;\n        return console.log(cards, cardName);\n      });\n    };\n\n    this.cardsFinishFilter = _ref4 => {\n      let {\n        target: {\n          value\n        }\n      } = _ref4;\n      this.setState({\n        cardsFilterName: value\n      });\n    };\n\n    this.stateInitial = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false\n    };\n    this.state = { ...this.stateInitial,\n      cards: [],\n      hasTrunfo: false,\n      cardsFilterName: ''\n    };\n  }\n\n  validadeAtribute() {\n    for (var _len = arguments.length, arr = new Array(_len), _key = 0; _key < _len; _key++) {\n      arr[_key] = arguments[_key];\n    }\n\n    if (arr.some(number => number > +'90' || number < 0)) return true;\n    if (arr.reduce((acc, number) => acc + number) > +'210') return true;\n    return false;\n  }\n\n  render() {\n    this.createdCardFilter();\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      cards,\n      cardsFilterName\n    } = this.state;\n    const {\n      onSaveButtonClick,\n      onInputChange\n    } = this;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        cardName: cardName,\n        cardDescription: cardDescription,\n        cardAttr1: cardAttr1,\n        cardAttr2: cardAttr2,\n        cardAttr3: cardAttr3,\n        cardImage: cardImage,\n        cardRare: cardRare,\n        cardTrunfo: cardTrunfo,\n        hasTrunfo: hasTrunfo,\n        isSaveButtonDisabled: !this.isFormValidate(),\n        onInputChange: onInputChange,\n        onSaveButtonClick: onSaveButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Preview\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          cardName: cardName,\n          cardImage: cardImage,\n          cardDescription: cardDescription,\n          cardAttr1: cardAttr1,\n          cardAttr2: cardAttr2,\n          cardAttr3: cardAttr3,\n          cardRare: cardRare,\n          cardTrunfo: cardTrunfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          \"data-testid\": \"name-filter\",\n          onChange: this.cardsFinishFilter,\n          value: cardsFilterName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), cards.length && cards.map(cardatual => /*#__PURE__*/_jsxDEV(Cardcreate, {\n          obj: cardatual,\n          onRemoveCard: this.onRemoveCard\n        }, cardatual.cardName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alessandroachtenberg/√Årea de Trabalho/Trybe/projetos/sd-018-a-project-tryunfo/src/App.js"],"names":["React","Form","Card","Cardcreate","App","Component","constructor","isFormValidate","cardName","cardAttr1","cardAttr2","cardAttr3","cardImage","cardRare","cardDescription","state","array","validadeAtribute","some","index","onInputChange","target","value","type","checked","setState","name","onSaveButtonClick","event","preventDefault","cardTrunfo","cardFinishi","hasTrunfo","cards","stateInitial","onRemoveCard","cardname","isTrunfo","cardsFilter","filter","card","createdCardFilter","cardsFilterName","console","log","cardsFinishFilter","arr","number","reduce","acc","render","length","map","cardatual"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport Cardcreate from './components/Cardcreate';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.stateInitial = {\n      cardName: '',\n      cardDescription: '',\n      cardAttr1: '0',\n      cardAttr2: '0',\n      cardAttr3: '0',\n      cardImage: '',\n      cardRare: 'normal',\n      cardTrunfo: false,\n    };\n    this.state = {\n      ...this.stateInitial,\n      cards: [],\n      hasTrunfo: false,\n      cardsFilterName: '',\n    };\n  }\n\n  isFormValidate = () => {\n    const {\n      cardName,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardDescription,\n    } = this.state;\n    const array = [\n      cardName,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardDescription,\n    ];\n    if (this.validadeAtribute(+cardAttr1, +cardAttr2, +cardAttr3)) return false;\n    return !array.some((index) => index === '');\n  };\n\n  onInputChange = ({ target }) => {\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    this.setState({\n      [target.name]: value,\n    });\n  };\n\n  onSaveButtonClick = (event) => {\n    event.preventDefault();\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    } = this.state;\n\n    const cardFinishi = {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n    };\n    if (cardTrunfo) {\n      this.setState({ hasTrunfo: true });\n    }\n    this.setState(({ cards }) => ({\n      cards: [...cards, cardFinishi],\n    }));\n    this.setState(this.stateInitial);\n  };\n\n  onRemoveCard = (cardname, isTrunfo) => {\n    const { cards } = this.state;\n    const cardsFilter = cards.filter((card) => card.cardName !== cardname);\n    if (isTrunfo) {\n      this.setState({\n        hasTrunfo: false,\n        cards: cardsFilter,\n      });\n    } else {\n      this.setState({\n        cards: cardsFilter,\n      });\n    }\n  };\n\n  createdCardFilter = () => {\n    const { cards, cardsFilterName } = this.state;\n    cards.filter(({ cardName }) => console.log(cards, cardName));\n  };\n\n  cardsFinishFilter = ({ target: { value } }) => {\n    this.setState({ cardsFilterName: value });\n  };\n\n  validadeAtribute(...arr) {\n    if (arr.some((number) => number > +'90' || number < 0)) return true;\n    if (arr.reduce((acc, number) => acc + number) > +'210') return true;\n    return false;\n  }\n\n  render() {\n   this.createdCardFilter()\n    const {\n      cardName,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardImage,\n      cardRare,\n      cardTrunfo,\n      hasTrunfo,\n      cards,\n      cardsFilterName,\n    } = this.state;\n    const { onSaveButtonClick, onInputChange } = this;\n    return (\n      <>\n        <Form\n          cardName={ cardName }\n          cardDescription={ cardDescription }\n          cardAttr1={ cardAttr1 }\n          cardAttr2={ cardAttr2 }\n          cardAttr3={ cardAttr3 }\n          cardImage={ cardImage }\n          cardRare={ cardRare }\n          cardTrunfo={ cardTrunfo }\n          hasTrunfo={ hasTrunfo }\n          isSaveButtonDisabled={ !this.isFormValidate() }\n          onInputChange={ onInputChange }\n          onSaveButtonClick={ onSaveButtonClick }\n        />\n        <div className=\"Preview\">\n          <Card\n            cardName={ cardName }\n            cardImage={ cardImage }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1 }\n            cardAttr2={ cardAttr2 }\n            cardAttr3={ cardAttr3 }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n          />\n        </div>\n        <div className=\"card\">\n          <input\n            type=\"text\"\n            data-testid=\"name-filter\"\n            onChange={ this.cardsFinishFilter }\n            value={ cardsFilterName }\n          />\n          {cards.length\n            && cards.map((cardatual) => (\n              <Cardcreate\n                key={ cardatual.cardName }\n                obj={ cardatual }\n                onRemoveCard={ this.onRemoveCard }\n              />\n            ))}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}